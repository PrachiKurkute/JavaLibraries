package edu.nyu.pqs.addressbook;

public class Entry {
  private final Name name;
  private final Address address;
  private final PhoneNumber phoneNumber;
  private final String email;
  private final String note;
  
  public static class Builder {
      //Required Parameters
      private final Name name;
      private final PhoneNumber phoneNumber;
      private final String email;
      
      //Optional Parameters
      private Address address;
      private String note="";
      
      public Builder(Name name,PhoneNumber phoneNumber,String email) {
          this.name=name;
          this.phoneNumber=phoneNumber;
          this.email=email;
      }
      
      public Builder address(Address address){
          this.address=address;
          return this;
      }
      public Builder note(String note){
          this.note=note;
          return this;
      }
      
      public Entry build(){
          return new Entry(this);
      }
  }
  
  private Entry(Builder builder){
      name=builder.name;
      address=builder.address;
      phoneNumber=builder.phoneNumber;
      email=builder.email;
      note=builder.note;
  }
  
  public void show() {
      this.name.show();
      this.address.show();
      this.phoneNumber.show();
      System.out.println("email: "+this.email);
      System.out.println("note: "+this.note);
  }

/* (non-Javadoc)
 * @see java.lang.Object#hashCode()
 */
@Override
public int hashCode() {
	final int prime = 31;
	int result = 1;
	result = prime * result + ((address == null) ? 0 : address.hashCode());
	result = prime * result + ((email == null) ? 0 : email.hashCode());
	result = prime * result + ((name == null) ? 0 : name.hashCode());
	result = prime * result + ((note == null) ? 0 : note.hashCode());
	result = prime * result
			+ ((phoneNumber == null) ? 0 : phoneNumber.hashCode());
	return result;
}

/* (non-Javadoc)
 * @see java.lang.Object#equals(java.lang.Object)
 */
@Override
public boolean equals(Object obj) {
	if (this == obj)
		return true;
	if (obj == null)
		return false;
	if (!(obj instanceof Entry))
		return false;
	Entry other = (Entry) obj;
	if (address == null) {
		if (other.address != null)
			return false;
	} else if (!address.equals(other.address))
		return false;
	if (email == null) {
		if (other.email != null)
			return false;
	} else if (!email.equals(other.email))
		return false;
	if (name == null) {
		if (other.name != null)
			return false;
	} else if (!name.equals(other.name))
		return false;
	if (note == null) {
		if (other.note != null)
			return false;
	} else if (!note.equals(other.note))
		return false;
	if (phoneNumber == null) {
		if (other.phoneNumber != null)
			return false;
	} else if (!phoneNumber.equals(other.phoneNumber))
		return false;
	return true;
}

/**
 * @return the name
 */
public Name getName() {
	return name;
}

/**
 * @return the address
 */
public Address getAddress() {
	return address;
}

/**
 * @return the phoneNumber
 */
public PhoneNumber getPhoneNumber() {
	return phoneNumber;
}

/**
 * @return the email
 */
public String getEmail() {
	return email;
}

/**
 * @return the note
 */
public String getNote() {
	return note;
}
}
